// pop/push - быстрые, shift/unshift - медленные
// Методы push и unshift могут добавлять сразу по несколько элементов

// === pop ===
// Удаляет последний элемент из массива и возвращает его
var fruits = ["Яблоко", "Апельсин", "Груша"];
fruits.pop() // удалили "Груша"
console.log(fruits) // Яблоко, Апельсин - исходный массив изменен

// === push ===
// Добавляет элемент в конец массива:
var fruits2 = ["Яблоко", "Апельсин"];
fruits2.push("Груша");
console.log(fruits2) // Яблоко, Апельсин, Груша

// === shift ===
// Удаляет из массива первый элемент и возвращает его
var fruits3 = ["Яблоко", "Апельсин", "Груша"];
fruits3.shift(); // удалили Яблоко
console.log(fruits3); // Апельсин, Груша - исходный массив изменен

// === unshift ===
// Добавляет элемент в начало массива
var fruits4 = ["Апельсин", "Груша"];
fruits.unshift('Яблоко');
console.log(fruits4); // Яблоко, Апельсин, Груша

// === SPLICE ===
// arr.splice(index, deleteCount, elem1, ..., elemN)
// Всегда позвращает массив из удаленных элементов и изменяет исходный массив
// удаление
let k = ["Я", "изучаю", "JavaScript"]
k.splice(1, 1) // начиная с позиции 1, удалить 1 элемент
console.log(k) // ["Я", "JavaScript"]
// Удалить и вставить на тоже место
let c = ["Я", "сейчас", "изучаю", "JavaScript"];
let r = c.splice(0, 3, "Мы", "изучаем") // удалить 3 первых элемента и добавить другие вместо них
console.log(c, r) // ["Мы", "изучаем", "JavaScript"] // r = массив из удаленных элементов
// Вставить элементы без удаления
var o = ["Я", "изучаю", "JavaScript"];
o.splice(2, 0, "сложный", "язык"); // с позиции 2, удалить 0, вставить "сложный", "язык"
console.log(o); // "Я", "изучаю", "сложный", "язык", "JavaScript"
// вставить элементы относительно конца массива
var n = [1, 2, 5]
n.splice(-1, 0, 3, 4); // начиная с позиции индексом -1 (перед последним элементом)
console.log(n); // результат: 1,2,3,4,5

// === SLICE ===
// slice(begin, end) // копирует участок массива от begin до end, не включая end.
// Исходный массив не меняется. Без указания аргументов - копируется весь массив
console.log(["Почему", "надо", "учить", "JavaScript"].slice(1, 3)) // элементы 1, 2 (не включая 3)
console.log(["Почему", "надо", "учить", "JavaScript"].slice(1)) // взять все элементы, начиная с номера 1
console.log(["Почему", "надо", "учить", "JavaScript"].slice(-2)) // копировать от 2-го элемента с конца и дальше

// === SPLIT ===
// возвращает массив из строки // воторой аргумент - ограничение элементов
console.log('Маша, Петя, Марина, Василий'.split(',', 3)) // ["Маша", " Петя", " Марина"]
console.log('Маша, Петя, Марина, Василий'.split('')) // ["М", "а", "ш", "а", "," ...]

// === JOIN ===
// склеивает массив в строку
console.log(['Маша', 'Петя', 'Марина', 'Василий'].join(';')) // Маша;Петя;Марина;Василий

// === REVERSE ===
// меняет порядок элементов в массиве на обратный.
console.log([1, 2, 3].reverse()) // [3, 2, 1]

// === CONCAT ===
// создаёт новый массив, в который копируются элементы из arr, а также value1, value2, ... valueN.
console.log([1, 2].concat(3, 4)); // 1,2,3,4
console.log([1, 2].concat([3, 4], 5)); // 1,2,[3,4],5
console.log([1, 2].concat()); // создавет такой же новый независимый массив

// === indexOf/lastIndexOf ===
// осуществляют поиск перебором
console.log([1, 0, false].indexOf(0)) // 1
console.log([1, 0, false].indexOf(null)) // -1


// ========= EXAMPLES =========

console.log('----- удалены числа вне диапазона ------')
arr = [5, 3, 8, 1];
function filterRangeInPlace(arr, a, b) {
  for (let i = 0; i < arr.length; i++) {
    if (arr[i] < a || arr[i] > b) arr.splice(i, 1), i--
  }
}
filterRangeInPlace(arr, 1, 4); // удалены числа вне диапазона 1..4
console.log(arr); // массив изменился: остались [3, 1]